name: Production

on:
  push:
    branches:
      - main
      - devops/setup-ci-cd
  workflow_dispatch:

jobs:
  prepare:
    uses: ./.github/workflows/prepare.yml

  build:
    needs: prepare
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        app_name: ${{ fromJSON(needs.prepare.outputs.app_name_matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
          cache: npm

      - name: Install npm@9.1.2
        run: npm install -g npm@9.1.2

      - name: Install turbo
        run: npm install -g turbo

      - name: Turbo prune
        run: turbo prune --scope=${{ matrix.app_name }}

      - name: Install dependencies
        working-directory: ./out
        run: npm install

      - name: Build application
        working-directory: ./out
        run: npm run build --filter==${{ matrix.app_name }}

      - name: Upload build as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.app_name }}
          path: ./out/apps/${{ matrix.app_name }}/out

  deploy:
    needs:
      - prepare
      - build
    runs-on: ubuntu-latest

    # if: push

    strategy:
      fail-fast: false
      matrix:
        app_name: ${{ fromJSON(needs.prepare.outputs.app_name_matrix) }}

    steps:
      - name: Download built artefact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.app_name }}
          path: out

      - name: Push files via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          port: 22
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # host: ${{ secrets.HOST }}
          # port: ${{ secrets.PORT }}
          # username: ${{ secrets.SERVER_IP }}
          # key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./out/*
          target: ~/xieffect-core/static/${{ matrix.app_name }}/
          strip_components: 1
          rm: true
